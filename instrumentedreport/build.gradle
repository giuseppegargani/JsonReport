//little documentation: https://stackoverflow.com/questions/61060401/how-to-access-gradle-defaultconfig-in-a-parent-gradle-file
/* DOCUMENTAZIONE:
    - GROOVY: https://www.groovy-lang.org/objectorientation.html
        Bel libro!!! https://livebook.manning.com/book/groovy-in-action-second-edition/chapter-18/
    - http://sorcersoft.org/project/site/gradle/userguide/multi_project_builds.html
    - HASPROPERTY: https://stackoverflow.com/questions/23190698/gradle-setting-a-subproject-property-from-another-subproject
    - CONCURRENCY IN GRADLE: https://docs.gradle.org/current/userguide/worker_api.html
        https://github.com/gradle/gradle/issues/7047
        THREADING: https://stackoverflow.com/questions/14370076/joining-thread-in-groovy

    - messaggi di test in console: https://localcoder.org/gradle-how-to-get-output-from-test-stderr-stdout-into-console
    - https://medium.com/@esycat/gradle-exec-output-f18f297c068
    - Catturare l'output di una task e salvarlo su di un file:: https://discuss.gradle.org/t/how-do-i-grab-the-output-of-a-task-going-to-stdout-and-write-it-to-a-file/3441
    - RIESEGUIRE I TEST!!!!!! : https://stackoverflow.com/questions/29427020/how-to-run-gradle-test-when-all-tests-are-up-to-date#:~:text=One%20option%20would%20be%20using,results%20before%20executing%20the%20tests.
    - ESEGUIRE UN PROCESS DA CLASS https://stackoverflow.com/questions/50692829/adb-shell-command-from-android-app
        possibili errori connessi con autorizzazioni (forse richiesto root!!!!)
        https://stackoverflow.com/questions/54680553/cannot-run-program-adb-error-13-permission-denied
        https://code-examples.net/it/q/467987
      LANCIARE UNA LIBRERIA DA RIGA DI COMANDO: https://docs.microsoft.com/en-us/answers/questions/369506/android-problem-starting-the-program-from-the-shel.html
      CONDIZIONI: https://localcoder.org/create-new-process-with-runtime-getruntime-in-android
      ESEMPI: https://www.tabnine.com/code/java/methods/java.lang.Runtime/exec
      DOCUMENTAZIONE UFFICIALE (SU PROCESS): https://developer.android.com/reference/java/lang/Process
      OUTPUTSTREAMWRITER: https://www.programiz.com/java-programming/outputstreamwriter
      https://developer.android.com/reference/java/io/OutputStreamWriter
      PROCESSBUILDER: https://developer.android.com/reference/kotlin/java/lang/ProcessBuilder
      https://developer.android.com/reference/kotlin/java/lang/Process  ufficiale!!!!!
      ALTRA DOCUMENTAZIONE UFFICIALE: https://stackoverflow.com/questions/3643939/java-process-with-input-output-stream
      articolo originario: https://stackoverflow.com/questions/65229137/how-to-write-adb-shell-commands-in-java
      altro articolo interessante: https://stackoverflow.com/questions/20922600/execute-adb-command-from-java-program

      CAMBIARE IL LIVELLO DELLA BATTERIA (linea di comando) adb -s DEVICE_ID shell dumpsys battery set level 5
      INTERESSANTE!!!!!!!!https://www.swtestacademy.com/adb-commands-java-device-manipulation/

      ANNOTAZIONI: https://stablekernel.com/article/the-10-step-guide-to-annotation-processing-in-android-studio/
      DOCUMENTAZIONE UFFICIALE: https://developer.android.com/studio/write/annotations

      ARTIFACTS: https://stackoverflow.com/questions/35571891/collect-build-artifacts-from-subprojects-into-rpm-with-gradle
      https://stackoverflow.com/questions/60449365/how-to-use-custom-task-as-artifact

      VEDERE E DEBUGGARE LE DIPENDENZE: https://docs.gradle.org/current/userguide/viewing_debugging_dependencies.html
      https://stackoverflow.com/questions/39008887/how-do-i-show-dependencies-tree-in-android-studio

      ENABLED: https://stackoverflow.com/questions/45451240/why-the-gradle-war-task-is-skipped

      ROBOELECTRIC: https://proandroiddev.com/robolectric-testing-with-androidjunitrunner-86292bceef25

      REPORT DI JRunner: https://stackoverflow.com/questions/33896315/how-to-retrieve-test-results-when-using-adb-shell-am-instrument

      IMPORTANTI!!!!!!!!!!!
      http://sorcersoft.org/project/site/gradle/userguide/multi_project_builds.html
      https://docs.gradle.org/current/userguide/more_about_tasks.html#sec:task_rules
      https://www.groovy-lang.org/objectorientation.html
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    //VERIFICARE CHE TRASFERISCA PER DIVERSI COMANDI TEST STRUMENTALE, CON IF CONDIZIONALE (NON ERRORE) E SENZA ANDROIDJUNITRUNNER
    task passReport () {

        //dependsOn(':instrumentedreport:primaTask')

        def nomeapp = 'nome'

        doLast {
            project(':app') {
                nomeapp = it.android.defaultConfig.applicationId
                println "buildV:::: $nomeapp"
            }
        }
        //esegue il comando
        //commandLine 'adb', 'shell', 'am', 'instrument', '-w', '-e', 'class', 'com.example.tests_vari.ExampleInstrumentedTest', 'com.example.tests_vari.test/androidx.test.runner.AndroidJUnitRunner'//, '&&', 'adb', 'shell', 'cat', 'sdcard/android/data/com.example.tests_vari/files/giuseppe.txt'
        //commandLine 'adb shell am instrument -w -e class com.example.tests_vari.ExampleInstrumentedTest com.example.tests_vari.test/androidx.test.runner.AndroidJUnitRunner && adb pull sdcard/android/data/com.example.tests_vari/files/giuseppe.txt'
        //commandLine 'adb', 'pull', 'sdcard/android/data/com.example.reportroot/files/JsonTestReport.json', '../'
        //parent.name
        doLast {
            try{
                exec {
                    //copia il file da emulatore a directory locale
                    commandLine 'adb', 'pull', "sdcard/android/data/${nomeapp}/files/JsonTestReport.json", '../'
                }
                println("The PREVIOUS report has been correctly transfered and if you want to update the REPORT please retry this OR MANUALLY PASS THE FILE TO THE ROOT PROJECT FOLDER BY TERMINAL: gradlew passReport")
                //e legge per verifica
                String fileContents = new File('JsonTestReport.json').text
                println(fileContents)
            } catch(all){
                println("THE REPORT HAS NOT YET BEEN TRANSFERED SO PLEASE RETRY OR MANUALLY PASS THE FILE TO THE ROOT PROJECT FOLDER BY TERMINAL: gradlew passReport")
            }
        }
    }

    task primaTask() {
        doLast {
            println("PRIMA DELLA CUSTOM TASK!!!!!!!!!!!!!!!!!!!!")
        }
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    /*testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'*/

    //With implementation the dependency is available in all source sets, including the test source sets.
    implementation 'junit:junit:4.+'
    implementation 'androidx.test.ext:junit:1.1.3'
    implementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Dependency to print e read JsonString and objects
    implementation 'com.google.code.gson:gson:2.8.6'
}